#!/bin/bash

RED='\033[0;31m'
GREEN='\033[0;32m'
CYAN='\033[0;36m'
LIGHT_RED='\033[1;31m'
LIGHT_GREEN='\033[1;32m'
YELLOW='\033[1;33m'
LIGHT_BLUE='\033[1;34m'
NC='\033[0m' # No Color

# Search this source script path
BASE_DIR="$(dirname -- "$BASH_SOURCE")";
# Define scripts navigation path
SCRIPTS_DIR="$BASE_DIR/scripts"

# List visible scripts
show_scripts() {
    echo "Allowed scripts:"
    for script in "$SCRIPTS_DIR/$1"/*; do
        echo -e "  - ${GREEN}$(basename $script .sh)${NC}"
    done
}

# Show modules options
show_options(){
    echo "Show options: "
    # module=$(find . -maxdepth 1 -type d | sed 's|./||' | fzf --height 40%)
    for folder in $SCRIPTS_DIR/*/; do
       echo -e "  - ${LIGHT_GREEN}$(basename "$folder")${NC}"
    done
}

#check if jq command exists
has_jq=$(jq --help)
if [ $? -ne 0 ]; then
    echo -e "${LIGHT_RED}'jq' tool is required please install using 'sudo apt install jq'${NC}"
    exit
fi

#check if fzf command exists
has_jq=$(fzf --help)
if [ $? -ne 0 ]; then
    echo -e "${LIGHT_RED}'fzf' tool is required please install using 'sudo apt install fzf'${NC}"
    exit
fi

# Check if receive model indicator or first param
if [ -z "$1" ]; then
    echo "Please, give a module name, such as aws, bash docker etc."
    show_options
    exit 1
fi

if [ ! -d "$SCRIPTS_DIR/$1" ]; then
    echo "The module $1 does not exist"
    echo "Please insert valid module name"
    show_options
    exit 1
fi

# Check if receive script name to execute
if [ -z "$2" ]; then
    echo "Please, give me a script name."
    show_scripts $1
    exit 1
fi


# Verifica si el script existe
SCRIPT="$SCRIPTS_DIR/$1/$2.sh"
if [ ! -f "$SCRIPT" ]; then
    echo "The script '$2' doesn't exist."
    show_scripts $1
    exit 1
fi

# remove first parameter that is module
shift  
# remove second parameter that is script name
shift  

# Execute selected script with parameters
bash "$SCRIPT" "$@" 